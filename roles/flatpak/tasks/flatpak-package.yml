---
- name: set pkg defaults
  set_fact:
    _pkg:
      name: '{{ pkg.name }}'
      repo: '{{ pkg.repo }}'
      state: '{{ pkg.state | default(package_defaults.state) }}'
      method: '{{ pkg.method | default(package_defaults.method) }}'

- name: set command
  set_fact:
    install_pkg: 'install -y --{{ _pkg.method }} {{ _pkg.repo }} {{ _pkg.name }}'
    remove_pkg: 'uninstall -y {{ _pkg.name }}'

- name: check package state
  shell: 'flatpak list | grep ^{{ _pkg.name }} || true'
  register: state_check
  changed_when: false

- name: set current state
  set_fact:
    current_state: '{{ (state_check.stdout_lines | length > 0) | ternary("present", "absent")}}'

- name: set add/remove command
  set_fact:
    pkg_cmd: '{{ (_pkg.state == "present") | ternary(install_pkg, remove_pkg) }}'

- name: add or remove the package
  become: '{{ _pkg.method == "system" }}'
  command: 'flatpak {{ pkg_cmd }}'
  when: current_state != _pkg.state
