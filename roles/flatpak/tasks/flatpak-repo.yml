---
- name: set repo defaults
  set_fact:
    _repo:
      name: '{{ repo.name }}'
      url: '{{ repo.url }}'
      state: '{{ repo.state | default(repo_defaults.state) }}'
      method: '{{ repo.method | default(repo_defaults.method) }}'

- debug: var=_repo

- name: check repo state
  shell: "flatpak remotes | grep -P '^{{ _repo.name }}[\\s\\t]+{{ _repo.method }}' || true"
  register: state_check
  changed_when: false

- name: set current state
  set_fact:
    current_state: '{{ (state_check.stdout_lines | length > 0) | ternary("present", "absent")}}'

- name: set command
  set_fact:
    repo_add: 'remote-add --{{ _repo.method }} --if-not-exists {{ _repo.name }} {{ _repo.url }}'
    repo_remove: 'remote-delete {{ _repo.name }}'

- name: set add/remove command
  set_fact:
    repo_cmd: '{{ (_repo.state == "present") | ternary(repo_add, repo_remove) }}'

- name: debug
  debug:
    var: repo_cmd

- name: add or remove the repo
  become: '{{ _repo.method == "system" }}'
  command: 'flatpak {{ repo_cmd }}'
  when: current_state != _repo.state
